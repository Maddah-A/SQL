-- Example query (PostgreSQL)
--SELECT * FROM "CharlotteChaze/BreakIntoTech"."netflix_people" LIMIT 5;
SELECT 
people.show_id
,people.director
,title.title
,title.type
FROM "CharlotteChaze/BreakIntoTech"."netflix_people" people

LEFT JOIN "CharlotteChaze/BreakIntoTech"."netflix_titles_info" title 
ON people.show_id=title.show_id;

--1. How many movie titles are there in the database? (movies only, not tv shows)
SELECT COUNT(type) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie';

--2.When was the most recent batch of tv shows and/or movies added to the database?
SELECT max(date(date_added)) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info";

--3. List all the movies and tv shows in alphabetical order.
SELECT title 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
ORDER BY title ASC;

--4. Who was the Director for the movie Bright Star?
SELECT 
Director 
FROM "CharlotteChaze/BreakIntoTech"."netflix_people" people
LEFT JOIN "CharlotteChaze/BreakIntoTech"."netflix_titles_info" titles
ON  people.show_id= titles.show_id
WHERE titles.title = 'Bright Star'
;


--5. What is the oldest movie in the database and what year was it made?

SELECT release_year,title
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'
ORDER BY release_year ASC
LIMIT 1;


-- NOTE: The above SQL gives you a correct answer,
-- but there are actually 2 movies that came out that year! 
-- You can see the second one by changing
-- LIMIT 1 to LIMIT 2. 
-- Or, you can use a "subquery" like this to see all the oldest movies
-- without assuming that there was only 1 that year: 
SELECT title, release_year 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'
AND release_year <= 
(SELECT MIN(release_year) 
FROM "CharlotteChaze/BreakIntoTech"."netflix_titles_info"
WHERE type = 'Movie'); 
